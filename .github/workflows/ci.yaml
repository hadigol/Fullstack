name: CI Pipeline

on: 
  pull_request:

permissions:
  id-token: write
  pull-requests: write
  contents: write

jobs:
  check-merge:
    runs-on: ubuntu-latest
    steps:
      - name: merge into stage
        if: github.base_ref == 'stage' && github.head_ref != 'devel'
        run: |
          echo "Merges into Stage MUST come from devel - FAILING"
          exit 1
      - name: merge into prod
        if: github.base_ref == 'prod' && github.head_ref != 'stage'
        run: |
          echo "Merges into prod MUST come from stage - FAILING"
          exit 1
      - name: merge into devel
        if: github.base_ref == 'devel'
        run: |
          echo "Checking branch name into devel"
          if [[ ! "${{github.head_ref}}" =~ ^(feature|bugfix)/ ]]; then
            echo "Branch head ref name incorrect, must start with feature/ or bugfix/"
            exit 1
          fi
  build:
    runs-on: ubuntu-latest
    needs: 
      - check-merge
    steps: 
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '15'

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

      - name: Run formatter
        run: npm run prettier

      - name: Run tests
        env: 
          CI: true
        run: npm run test

      - name: Build project
        run: npm run build

      - name: upload Build
        uses: actions/upload-artifact@v4
        with: 
          name: upload-build
          path: public/
  
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/${{github.base_ref}}
    needs: 
      - check-merge
      - build
    steps: 
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials for region audience
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          audience: sts.amazonaws.com
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::734579227127:role/Fullstack-github

      - name: Download Build
        uses: actions/download-artifact@v4
        with: 
          name: upload-build
          path: build/

      - name: Setup TF
        uses: hashicorp/setup-terraform@v3

      - name: TF init
        run: terraform init

      - name: TF validate
        run: terraform validate

      - name: TF plan
        run: terraform plan

      - name: TF apply
        if: github.base_ref == 'devel'
        run: terraform apply -var="bucket_name=fullstack-hadi-${{github.run_id}}" -auto-approve
            
      - name: TF apply
        if: github.base_ref != 'devel'
        run: terraform apply -auto-approve

      - name: output bucket_name
        id: tf_output_bucket_name
        run: |
          echo "bucket_name=$(terraform output -raw bucket_name)" >> $GITHUB_OUTPUT

      - name: output cdn Id
        id: tf_output_cdn_id
        run: |
          echo "cdn_id=$(terraform output -raw cdn_id)" >> $GITHUB_OUTPUT

      - name: copy build to s3
        run: |
          aws s3 sync ../../build/ s3://${{steps.tf_output_bucket_name.outputs.bucket_name}}

      - name: Invalidate CDN cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{steps.tf_output_cdn_id.outputs.cdn_id}} --paths "/*"

      - name: Destroy Terraform
        if: always() && github.base_ref == 'devel'
        run: terraform destroy -auto-approve

